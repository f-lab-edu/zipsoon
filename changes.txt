diff --git a/api/src/main/java/com/zipsoon/api/config/SecurityConfig.java b/api/src/main/java/com/zipsoon/api/config/SecurityConfig.java
index 90b5ac8..5d34477 100644
--- a/api/src/main/java/com/zipsoon/api/config/SecurityConfig.java
+++ b/api/src/main/java/com/zipsoon/api/config/SecurityConfig.java
@@ -13,6 +13,11 @@ import org.springframework.security.config.annotation.web.configurers.AbstractHt
 import org.springframework.security.config.http.SessionCreationPolicy;
 import org.springframework.security.web.SecurityFilterChain;
 import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
+import org.springframework.web.cors.CorsConfiguration;
+import org.springframework.web.cors.CorsConfigurationSource;
+import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
+
+import java.util.List;
 
 @Configuration
 @EnableWebSecurity
@@ -38,6 +43,7 @@ public class SecurityConfig {
     @Bean
     public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
         return http
+            .cors(cors -> cors.configurationSource(corsConfigurationSource()))
             .csrf(AbstractHttpConfigurer::disable)
             .httpBasic(AbstractHttpConfigurer::disable)
             .formLogin(AbstractHttpConfigurer::disable)
@@ -59,4 +65,17 @@ public class SecurityConfig {
             .build();
     }
 
+    @Bean
+    public CorsConfigurationSource corsConfigurationSource() {
+        CorsConfiguration configuration = new CorsConfiguration();
+        configuration.setAllowedOriginPatterns(List.of("*"));
+        configuration.setAllowedMethods(List.of("GET", "POST", "PUT", "DELETE", "OPTIONS"));
+        configuration.setAllowedHeaders(List.of("*"));
+        configuration.setAllowCredentials(true);
+
+        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
+        source.registerCorsConfiguration("/**", configuration);
+        return source;
+    }
+
 }
diff --git a/common/src/main/resources/schema.sql b/common/src/main/resources/schema.sql
index 9c5a3d6..0e254cb 100644
--- a/common/src/main/resources/schema.sql
+++ b/common/src/main/resources/schema.sql
@@ -54,7 +54,8 @@ CREATE TABLE estate_score (
     id bigserial PRIMARY KEY,
     estate_snapshot_id bigint NOT NULL,
     score_type_id int NOT NULL,
-    score numeric(5,2) NOT NULL,
+    raw_score numeric(5,2) NOT NULL,
+    normalized_score numeric(5,2),
     created_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
 
     FOREIGN KEY (estate_snapshot_id) REFERENCES estate_snapshot(id),
