<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zipsoon.batch.estate.mapper.BatchEstateMapper">

    <resultMap id="EstateSnapshotResultMap" type="EstateSnapshot">
        <result column="platform_type"
                property="platformType"
                typeHandler="com.zipsoon.common.config.typehandler.PlatformTypeHandler"/>
        <result column="raw_data"
                property="rawData"
                typeHandler="com.zipsoon.common.config.typehandler.JsonTypeHandler"/>
        <result column="estate_type"
                property="estateType"
                typeHandler="com.zipsoon.common.config.typehandler.EstateTypeHandler"/>
        <result column="trade_type"
                property="tradeType"
                typeHandler="com.zipsoon.common.config.typehandler.TradeTypeHandler"/>
        <result column="location"
                property="location"
                typeHandler="com.zipsoon.common.config.typehandler.PointTypeHandler"
                jdbcType="OTHER"/>
        <result column="tags"
                property="tags"
                typeHandler="com.zipsoon.common.config.typehandler.StringArrayTypeHandler"/>
        <result column="image_urls"
                property="imageUrls"
                typeHandler="com.zipsoon.common.config.typehandler.StringArrayTypeHandler"/>
    </resultMap>
    
    <resultMap id="EstateResultMap" type="Estate">
        <result column="platform_type"
                property="platformType"
                typeHandler="com.zipsoon.common.config.typehandler.PlatformTypeHandler"/>
        <result column="raw_data"
                property="rawData"
                typeHandler="com.zipsoon.common.config.typehandler.JsonTypeHandler"/>
        <result column="estate_type"
                property="estateType"
                typeHandler="com.zipsoon.common.config.typehandler.EstateTypeHandler"/>
        <result column="trade_type"
                property="tradeType"
                typeHandler="com.zipsoon.common.config.typehandler.TradeTypeHandler"/>
        <result column="location"
                property="location"
                typeHandler="com.zipsoon.common.config.typehandler.PointTypeHandler"
                jdbcType="OTHER"/>
        <result column="tags"
                property="tags"
                typeHandler="com.zipsoon.common.config.typehandler.StringArrayTypeHandler"/>
        <result column="image_urls"
                property="imageUrls"
                typeHandler="com.zipsoon.common.config.typehandler.StringArrayTypeHandler"/>
    </resultMap>

    <!-- 매물 정보를 estate 테이블에 저장 -->
    <insert id="insertEstates" parameterType="java.util.List">
        INSERT INTO estate (
            platform_type,
            platform_id,
            raw_data,
            estate_name,
            estate_type,
            trade_type,
            price,
            rent_price,
            area_meter,
            area_pyeong,
            location,
            address,
            tags,
            image_urls,
            dong_code,
            created_at
        ) VALUES
        <foreach collection="list" item="estate" separator=",">
            (
            #{estate.platformType, typeHandler=com.zipsoon.common.config.typehandler.PlatformTypeHandler},
            #{estate.platformId},
            #{estate.rawData, typeHandler=com.zipsoon.common.config.typehandler.JsonTypeHandler},
            #{estate.estateName},
            #{estate.estateType, typeHandler=com.zipsoon.common.config.typehandler.EstateTypeHandler},
            #{estate.tradeType, typeHandler=com.zipsoon.common.config.typehandler.TradeTypeHandler},
            #{estate.price},
            #{estate.rentPrice},
            #{estate.areaMeter},
            #{estate.areaPyeong},
            #{estate.location, typeHandler=com.zipsoon.common.config.typehandler.PointTypeHandler, jdbcType=OTHER},
            #{estate.address},
            #{estate.tags, typeHandler=com.zipsoon.common.config.typehandler.StringArrayTypeHandler},
            #{estate.imageUrls, typeHandler=com.zipsoon.common.config.typehandler.StringArrayTypeHandler},
            #{estate.dongCode},
            #{estate.createdAt}
            )
        </foreach>
        ON CONFLICT (platform_type, platform_id) 
        DO UPDATE SET
            raw_data = EXCLUDED.raw_data,
            estate_name = EXCLUDED.estate_name,
            estate_type = EXCLUDED.estate_type,
            trade_type = EXCLUDED.trade_type,
            price = EXCLUDED.price,
            rent_price = EXCLUDED.rent_price,
            area_meter = EXCLUDED.area_meter,
            area_pyeong = EXCLUDED.area_pyeong,
            location = EXCLUDED.location,
            address = EXCLUDED.address,
            tags = EXCLUDED.tags,
            image_urls = EXCLUDED.image_urls,
            dong_code = EXCLUDED.dong_code,
            created_at = EXCLUDED.created_at
    </insert>
    
    <!-- 기존 매물 정보를 estate_snapshot 테이블로 이동 -->
    <insert id="migrateToSnapshot">
        INSERT INTO estate_snapshot (
            platform_type,
            platform_id,
            raw_data,
            estate_name,
            estate_type,
            trade_type,
            price,
            rent_price,
            area_meter,
            area_pyeong,
            location,
            address,
            tags,
            image_urls,
            dong_code,
            created_at
        )
        SELECT 
            e.platform_type,
            e.platform_id,
            e.raw_data,
            e.estate_name,
            e.estate_type,
            e.trade_type,
            e.price,
            e.rent_price,
            e.area_meter,
            e.area_pyeong,
            e.location,
            e.address,
            e.tags,
            e.image_urls,
            e.dong_code,
            e.created_at
        FROM 
            estate e
        WHERE 
            (e.platform_type, e.platform_id) IN 
            (SELECT platform_type, platform_id FROM estate WHERE created_at <![CDATA[ < ]]> NOW() - INTERVAL '1 day')
    </insert>

    <!-- 나중에 사용할 estate 테이블의 모든 항목 조회 -->
    <select id="selectAllEstates" resultMap="EstateResultMap">
        SELECT *
        FROM estate
    </select>

    <!-- 날짜 기준으로 estate_snapshot 테이블의 모든 항목 조회 -->
    <select id="selectLatestAll" resultMap="EstateSnapshotResultMap">
        SELECT *
        FROM estate_snapshot
    </select>

</mapper>